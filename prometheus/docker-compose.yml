version: "3.8"

volumes:
  prometheus_data: {}
  grafana_data: {}
  postgres_data: {} # Volume to persist PostgreSQL data

services:
  statsd:
    image: prom/statsd-exporter
    container_name: prometheus-statsd
    ports:
      - "9102:9102"
      - "9125:9125/udp"
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9102/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3

  prometheus:
    image: prom/prometheus
    container_name: prometheus-server
    volumes:
      - ./config/prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--storage.tsdb.retention.time=200h"
      - "--web.enable-lifecycle"
    expose:
      - 9090
    ports:
      - "9090:9090"
    depends_on:
      postgres-exporter:
        condition: service_healthy
      statsd:
        condition: service_healthy
      node-exporter:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  node-exporter:
    image: prom/node-exporter
    container_name: prometheus-node-exporter
    expose:
      - "9100"
    ports:
      - "9100:9100"
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9100/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3

  grafana:
    image: grafana/grafana
    container_name: prometheus-grafana
    depends_on:
      prometheus:
        condition: service_healthy
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana/provisioning:/etc/grafana/provisioning
      - ./config/grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=foobar
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: postgres:15
    container_name: prometheus-postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init_db:/docker-entrypoint-initdb.d # Mount folder for initialization scripts
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=changeme
    ports:
      - "5432:5432"
    command: >
      postgres
      -c shared_preload_libraries=pg_stat_statements
      -c track_activity_query_size=4096
      -c pg_stat_statements.track=ALL
      -c pg_stat_statements.max=10000
      -c pg_stat_statements.track_utility=off
      -c track_io_timing=on
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root -d postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  postgres-exporter:
    image: wrouesnel/postgres_exporter
    container_name: prometheus-postgres-exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://root:changeme@prometheus-postgres:5432/postgres?sslmode=disable"
    ports:
      - "9187:9187"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9187/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3

  webapp:
    build: .
    container_name: prometheus-webapp
    ports:
      - "3001:3001"
    environment:
      - DB_HOST=prometheus-postgres
      - DB_NAME=postgres
      - DB_USER=root
      - DB_PASSWORD=changeme
      - DB_PORT=5432
    depends_on:
      postgres:
        condition: service_healthy
      prometheus:
        condition: service_healthy
      statsd:
        condition: service_healthy
    volumes:
      - ./src:/app # Mount source code for development
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  default:
    driver: bridge 